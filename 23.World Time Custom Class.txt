                                    23.World Time Custom class

Now, we are goin to create custom class for the get tim function

In lib/services/world_time.dart

    import 'package:http/http.dart';
    import 'dart:convert';

    class WorldTime {

      String location; // location name for UI
      String time; // the time in that location
      String flag; // url to an asset flag icon
      String url; // location url for api endpoint

      WorldTime({ this.location, this.flag, this.url });

      Future<void> getTime() async {
        // make the request
        Response response = await get('http://worldtimeapi.org/api/timezone/$url');
        Map data = jsonDecode(response.body);

        // get properties from json
        String datetime = data['datetime'];
        String offset = data['utc_offset'].substring(1,3);

        // create DateTime object
        DateTime now = DateTime.parse(datetime);
        now = now.add(Duration(hours: int.parse(offset)));

        print(now);

        // set the time property
            time = now.toString();
      }

    }
/////////////////////////////////////////////////////////////////////////////////////

In location.dart 
    import 'package:flutter/material.dart';
    import 'package:world_time_app/services/world_time.dart'; //importig world_time file

    class Loading extends StatefulWidget {
      @override
      _LoadingState createState() => _LoadingState();
    }

    class _LoadingState extends State<Loading> {

      String time = 'loading';

      void setupWorldTime() async {
        WorldTime instance = WorldTime(location: 'Berlin', flag: 'germany.png', url: 'Europe/Berlin'); //creating the instance of the WorldTime class in world_time.dart
        await instance.getTime(); //calling the getTime func to get the time from the API
        print(instance.time);
        setState(() {
          time = instance.time; //setting the time to the local state
        });
      }

      @override
      void initState() {
        super.initState();
        setupWorldTime();
      }

      @override
      Widget build(BuildContext context) {
        return Scaffold(
          body: Padding(
            padding: const EdgeInsets.all(50.0),
            child: Text(time), //displaying that time
          ),
        );
      }
    }
